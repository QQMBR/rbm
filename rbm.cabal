Name:                rbm
Version:             0.0
Description:         restricted boltzman machine
Author:              anatoly yakovenko
Build-Type:          Simple
Cabal-Version:       >=1.2

Library
  exposed-modules:   Data.RBM,
                     Data.DNN.Trainer,
                     Data.MLP,
                     Data.Matrix,
                     Data.ImageUtils
  Build-Depends:     base,
                     random,
                     split,
                     mtl,
                     repa,
                     repa-algorithms,
                     transformers,
                     monad-loops,
                     JuicyPixels,
                     JuicyPixels-repa,
                     vector,
                     deepseq

Test-Suite test-RBM
    type:            exitcode-stdio-1.0
    main-is:         Test/RBM.hs
    ghc-options:     -Werror -Wall -threaded -O3 -main-is Test.RBM.test
    Build-Depends:   QuickCheck,
                     monad-loops,
                     criterion

Test-Suite perf-RBM
    type:            exitcode-stdio-1.0
    main-is:         Test/RBM.hs
    ghc-options:     -Werror -Wall -threaded -O3 -main-is Test.RBM.perf
    Build-Depends:   QuickCheck,
                     monad-loops,
                     criterion

Test-Suite test-Matrix
    type:            exitcode-stdio-1.0
    main-is:         Test/Matrix.hs
    ghc-options:     -Werror -Wall -threaded -O3 -main-is Test.Matrix.test
    Build-Depends:   QuickCheck

Test-Suite test-MLP
    type:            exitcode-stdio-1.0
    main-is:         Test/MLP.hs
    ghc-options:     -Werror -Wall -threaded -O3 -main-is Test.MLP.test
    Build-Depends:   QuickCheck


Executable mnist
    main-is:         Examples/Mnist.hs
    ghc-options:     -Werror -Wall -threaded -O3 -main-is Examples.Mnist.mnist
    Build-Depends:   bytestring,
                     repa-io,
                     repa-algorithms,
                     zlib,
                     transformers,
                     binary

Executable generatetrainlabels
    main-is:         Examples/Mnist.hs
    ghc-options:     -Werror -Wall -threaded -O3 -main-is Examples.Mnist.generateTrainLabels

----mnist data generation
--Executable trainbatches
--    main-is:         Data/Mnist.hs
--    ghc-options:     -Werror -Wall -threaded -O3 -main-is Data.Mnist.generateTrainBatches
--
--Executable testbatches
--    main-is:         Data/Mnist.hs
--    ghc-options:     -Werror -Wall -threaded -O3 -main-is Data.Mnist.generateTestBatches
--
--Executable bigtrainbatches
--    main-is:         Data/Mnist.hs
--    ghc-options:     -Werror -Wall -threaded -O3 -main-is Data.Mnist.generateBigTrainBatches
--
--Executable samplebatches
--    main-is:         Data/Mnist.hs
--    ghc-options:     -Werror -Wall -threaded -O3 -main-is Data.Mnist.generateSamples
--
--
